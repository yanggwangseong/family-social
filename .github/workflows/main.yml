name: deployment from ElasticBeanstalk
on:
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Latest Repo
        uses: actions/checkout@main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Create .env.production
        run: |
          echo "NEXT_PUBLIC_COOKIE_KEY=${{ secrets.NEXT_PUBLIC_COOKIE_KEY }}" > ./frontend/.env.production
          echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}" >> ./frontend/.env.production
          echo "NEXT_PUBLIC_SSR_API_URL=${{ secrets.NEXT_PUBLIC_SSR_API_URL }}" >> ./frontend/.env.production
          echo "NEXT_PUBLIC_SOCKET_URL=${{ secrets.NEXT_PUBLIC_SOCKET_URL }}" >> ./frontend/.env.production

      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: yanggwangseong/social-frontend:latest

      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: yanggwangseong/social-backend:latest

      - name: Build and push nginx
        uses: docker/build-push-action@v4
        with:
          context: ./nginx
          push: true
          tags: yanggwangseong/social-nginx:latest

      - name: Generate deployment package
        run: zip -r deploy.zip * -x "*.git*" node_modules

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.AWS_APPLICATION_NAME }}
          environment_name: ${{ secrets.AWS_ENVIRONMENT_NAME }}
          version_label: deploy-${{ github.SHA }}
          region: ${{ secrets.AWS_REGION }}
          existing_bucket_name: ${{ secrets.AWS_BUCKET_NAME }}
          deployment_package: deploy.zip
          wait_for_environment_recovery: 300
          use_existing_version_if_available: true
          # version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          # version_description: Version ${{steps.build-number.outputs.BUILD_NUMBER}} deployed via github actions ${{ github.sha }}
